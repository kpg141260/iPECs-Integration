{
    "Language Resource File": "en-GB",
    "err": {
        "err001": "Connection error while trying to connect to [{0}] ->> socket.error: [{1}]",
        "err002": "Key [{0}] not found in dictionary [{1}].",
        "err003": "The commands resource file {f_cmd} could not be found. Execution halted!",
        "err004": "Program terminated abnormally, check log entries for more information.",
        "err005": "Requested section [{0}] is not defined in the configuration file and therefore cannot be updated.",
        "err006": "File [{0}] not found!",
        "err007": "Invalid login information for [{0}] - please check your credentials."
    },
    "dbg": {
        "dbg001": "Base URI ->> [{0}].",
        "dbg002": "Full URI ->> [{0}].",
        "dbg003": "->> received request to execute iPECs [{0}] command.",
        "dbg004": "Full WSS ->> [{0}].",
        "dbg005": "Attempting to communicate with iPECs API using command: [{0}]."
    },
    "warn": {
        "wrn001": "",
        "wrn002": ""
    },
    "inf": {
        "inf001": "Found IP address of [{0}] to be [{1}].",
        "inf002": "Attempting to communicate with iPECs API using command: [{0}].",
        "inf003": "SSL certificate warnings DISABLED.",
        "inf004": "iPECs API shut down.",
        "inf005": "[{0}] destructor called.",
        "inf006": "Elapsed time for {0} operation is {1} seconds.",
        "inf007": "Call counters have been reset.",
        "inf008": "Next call counter reset on [{0}] at [{1}]."
    },
    "msg": {
        "msg001": "Language resource file [{0}] successfully loaded.",
        "msg002": "Commands and Headers resource file [{0}] successfully loaded.",
        "msg003": "{0} initialisation complete."
    },
    "http": {
        "500": "[{0}] [{1}] Server Error: [{2}]!",
        "404": "[{0}] [{1}] URL not found: [{2}]!",
        "403": "[{0}] [{1}] Operation forbidden: [{2}]!",
        "401": "[{1}] HTTP access to [{0}] failed or access not authorised! HTTP Message: [{2}]",
        "400": "[{0}] [{1}] Bad Request: [{2}]",
        "300": "[{0}] [{1}] Unexpected Redirect: [2]",
        "200": "HTTP request [{0}] successful.",
        "100": "[[{0}] Unexpected Error: [HTTP {1}]: Content: [{2}].",
        "http001": "User is already logged into iPECs API -> login command not executed.",
        "http002": "No user currently logged in -> [{0}] command not executed.",
        "http003": "No user currently logged into iPECs API server - command cannot be executed!",
        "http004": "Unverified HTTPS request is being made to host {0}}.",
        "http006": "Could not login host {0}:{1} after {2} attempts - login attempt aborted.",
        "http007": "HTTP response [{0}] [{2}] ->> login attempt #{3} entering {1} second(s) delay.",
        "http008": "HTTP response {0} (socket timeout) ->> entering {1} second(s) delay.",
        "http009": "Logging into iPECs API ->> attempt #1",
        "http010": "Connection established to [{0}] -  Timeout: [{1}] - System: [{2}] - Version: [{3}] - API: [{4}].",
        "http011": "[{0}] initialisation complete.",
        "http012": "Logging out of iPECs API server [{0}].",
        "wss001": "Secure WEB Socket [{0}] established.",
        "wss002": "WebSocket connection closed: [{0}].",
        "wss003": "Secure WEB Socket received the following message from server: [{0}].",
        "wss004": "Secure Socket Consumer created. Server response: [{}]",
        "wss005": "Trying to fetch host's [{0}] TLS certificate...",
        "wss006": "No response from host [{0}:{1}] after {2} attempts, aborting connection attempt.",
        "wss007": "No response from host [{0}]. Retrying in {1} seconds...",
        "wss008": "Web socket to [{0}] established.",
        "wss009": "Web socket to [{0}] could not be established!",
        "wss010": "Connecting; transport details: [{}]",
        "wss011": "Trying to establish WEB Socket connection...",
        "wss012": "Initialising {0} with the following parameters: IP: {1}, Port: {2}, URI: {3}",
        "wss013": "Socket connection error [{0}] while trying to connect to [{1}].",
        "wss014": "Socket connection [{0}] closed.",
        "wss015": "Socket is alive",
        "wss016": "iPECs server event data returned is not supported! Event Data: [{0}], Error: [{1}].",
        "wss017": "iPECs Event data processed.",
        "wss018": "iPECs server sent time stamp event.",
        "ssl001": "Executing system command [pip install --upgrade certifi]",
        "ssl002": "Could not install Python Certifi bundle. Command exited with code [{0}].",
        "ssl003": "Python Certifi bundle upgraded or installed successfully.",
        "ssl004": "Removing any existing file or link...",
        "ssl005": "Creating symlink to Certifi certificate bundle...",
        "ssl006": "Setting permissions...",
        "ssl007": "Python Certifi Certificate bundle update complete."
    },
    "ipecs": {
        "error": "[!] iPECs API return the following error: ID: [{0}], Message: [{}].",
        "err002": "Command [{0}] not found in list of supported commands! Please check file [{1}] section [{2}] for list of supported commands.",
        "err003": "iPEcs command [{0}] not found",
        "wrn001": "iPECs command [{0}] not yet implemented!",
        "wrn002": "iPECs ACD Event Code [{key}] not defined!",
        "wrn003": "iPECs ACD Error Code [{key}] not defined!",
        "wrn004": "iPECs ACD Call Type [{key}] not defined!",
        "wrn005": "iPECs ACD Conference Action Type [{key}] not defined!",
        "wrn006": "iPECs ACD Call Forwarding Type [{key}] not defined!",
        "wrn007": "iPECs ACD Ringing Type [{key}] not defined!"
    },
    "cipher": {
        "msg001": "password",
        "msg002": "User ID",
        "msg003": "iPECs API",
        "msg004": "Mongo DB",
        "enc001": "Attempting to load key file [{0}].",
        "enc002": "Key file [{0}] located and hash key loaded.",
        "enc003": "The {0} used to authenticate with {1} is not yet encrypted. Using AES to encrypt the {0} now.",
        "enc004": "No iPECs API login details defined in file [{0}]! Please provide valid login details in section 'cipher':'pw' and 'uid'.",
        "enc005": "No Mongo DB login details defined in file [{0}]! Please provide a valid login details in section 'mongo':'uid' and 'pw'.",
        "enc006": "Encryption of secret requested.",
        "enc007": "Decryption of secret requested.",
        "enc008": "Plaintext is now successfully encrypted.",
        "enc009": "Cipher-text has been successfully decrypted.",
        "enc010": "AES Cipher engine successfully loaded.",
        "wrn001": "Plaintext user credentials stored in configuration file. Please run secureCredentials method.",
        "wrn002": "User ID is the same as the the one stored in the configuration file - User ID was NOT saved!",
        "wrn003": "Password is the same as the one stored in the configuration file - Password was NOT saved!"
    },
    "mongo": {
        "db001": "Attempting to connect to MongoDB server on [{0}] at Port [{1}], Connection Timeout = {2}. Socket Timeout = {3}.",
        "db002": "Connection to MongoDB database [{0}] successful.",
        "db003": "MongoDB server {0}:{1} not responding.",
        "db004": "Connection to MongoDB {0}:{1} cannot be established.",
        "db005": "Connection to MongoDB {0}:{1} lost.",
        "db006": "Connection to MongoDB server on [{0}] at Port [{1}] successful.",
        "db007": "Attempting to connect to MongoDB database [{0}].",
        "db008": "Query command execution timeout.",
        "db009": "No records found.",
        "db010": "Starting Mongo server monitoring daemon.",
        "db011": "Mongo monitoring daemon started.",
        "db012": "Creating MongoDB database [{0}].",
        "db013": "MongoDB database [{0}] created.",
        "db014": "Creating MongoDB collection [{0}].",
        "db015": "MongoDB collection [{0}] created.",
        "db016": "Securing MongoDB [{0}].",
        "db017": "Connection to Mongo server {0}:{1} is alive.",
        "db018": "Could not connect to mongo DB after [{0}] attempts - connection attempt aborted.",
        "db019": "Could not connect to mongo DB [{0}] entering {1} second(s) delay, attempt #{2}.",
        "db020": "{0} initialisation complete.",
        "db021": "MongoDB end of day summary update submitted to database."
    }
}